var K = require('../krasota'),
    KrasotaJSIdentity = K.KrasotaJSIdentity;

ometa KrasotaJS <: KrasotaJSIdentity {

    commaListItemFirstCommentFirstSpaces = ['spaces' :t] ->
        [#spaces, t.indexOf('\n' ) === -1 ? ' ' : t],

    commaListItemLastCommentLastSpaces = (['spaces':a :t] | [anything*]):d -> {
        return a ? [#spaces, t.indexOf('\n' ) === -1 ? '' : t ] : d
    },

    commaListItemFirstComment =
        ['spacesAndComments' ([ commaListItemFirstCommentFirstSpaces:sp :b]|[anything*]):a ] ->
        [#spacesAndComments, sp ? [sp].concat(b ? b: []) : [['spaces', ' ']].concat(a)],

    commaListItemLastComment = ['spacesAndComments' anything*:a ] -> {
            var lastItem = a[0][0].pop(),
                computedLast = lastItem && KrasotaJS.match(lastItem, 'commaListItemLastCommentLastSpaces');

            lastItem && a[0][0].push(computedLast || lastItem);
            return [#spacesAndComments, a[0][0] ]
    },

    commaListFirstItem =
        [#objItem t:sc1 t:n t:sc2 t:sc3 t:v commaListItemLastComment:sc4] ->
        [#objItem, sc1, n, sc2, sc3, v, sc4] |
        [(#arrItem|#funcArg):n t:s1 t:e commaListItemLastComment:s2] ->
        [n, s1, e, s2],
    commaListLastItem =
        [#objItem commaListItemFirstComment:sc1 t:n t:sc2 t:sc3 t:v t:sc4] ->
        [#objItem, sc1, n, sc2, sc3, v, sc4] |
        [(#arrItem|#funcArg):n commaListItemFirstComment:s1 t:e t:s2] ->
        [n, s1, e, s2],
    commaListItem =
        [#objItem t:sc1 t:n t:sc2 t:sc3 t:v t:sc4] ->
        [#objItem, sc1, n, sc2, sc3, v, sc4] |
        [(#arrItem|#funcArg):n t:s1 t:e t:s2] ->
        [n, s1, e, s2],
    commaListCommonItem =
        [#objItem commaListItemFirstComment:sc1 t:n t:sc2 t:sc3 t:v commaListItemLastComment:sc4] ->
        [#objItem, sc1, n, sc2, sc3, v, sc4] |
        [(#arrItem|#funcArg):n commaListItemFirstComment:s1 t:e commaListItemLastComment:s2] ->
        [n, s1 || s1, e, s2],

    commaList =
        commaListItem:first commaListItem*:tail -> {
            if(tail.length !== 0) {
                first = KrasotaJS.match(first, 'commaListFirstItem');

                var last = KrasotaJS.match(tail.pop(), 'commaListLastItem');
                var common = tail.map(function(item){ return KrasotaJS.match(item, 'commaListCommonItem') });

                common.push(last);
                tail = common;
            }

            return [#commaList, first].concat(tail);
        } | ^commaList

  }
